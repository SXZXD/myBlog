(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{468:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"代码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码规范"}},[s._v("#")]),s._v(" 代码规范")]),s._v(" "),a("p",[s._v("代码规范是指程序员在编码时要遵守的规则，规范的目的就是为了让程序员编写易于阅读、可维护的代码。")]),s._v(" "),a("p",[s._v("试想一下，一个几十万行代码的项目，存在几种不同的代码规范，阅读起来是什么感受？连代码缩进使用空格还是 Tab 都能引发不少程序员的争论，可以说统一代码规范是非常重要的事情。")]),s._v(" "),a("p",[s._v("统一代码规范除了刚才所说的两点外，还有其他好处：")]),s._v(" "),a("ul",[a("li",[s._v("规范的代码可以促进团队合作")]),s._v(" "),a("li",[s._v("规范的代码可以降低维护成本")]),s._v(" "),a("li",[s._v("规范的代码有助于 code review（代码审查）")]),s._v(" "),a("li",[s._v("养成代码规范的习惯，有助于程序员自身的成长")])]),s._v(" "),a("p",[s._v("当团队的成员都严格按照代码规范来写代码时，可以保证每个人的代码看起来都像是一个人写的，看别人的代码就像是在看自己的代码（代码一致性），阅读起来更加顺畅。更重要的是我们能够认识到规范的重要性，并坚持规范的开发习惯。")]),s._v(" "),a("h3",{attrs:{id:"如何制订代码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何制订代码规范"}},[s._v("#")]),s._v(" 如何制订代码规范")]),s._v(" "),a("p",[s._v("代码规范一般包含了代码格式规范、变量和函数命名规范、文档注释规范等等。")]),s._v(" "),a("h4",{attrs:{id:"代码格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码格式"}},[s._v("#")]),s._v(" 代码格式")]),s._v(" "),a("p",[s._v("一般是指代码缩进使用空格还是 Tab、每行结尾要不要加分号、左花括号需不需要换行等等。")]),s._v(" "),a("h4",{attrs:{id:"命名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[s._v("#")]),s._v(" 命名规范")]),s._v(" "),a("p",[s._v("命名规范一般指命名是使用驼峰式、匈牙利式还是帕斯卡式；用名词、名词组或动宾结构来命名。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" smallObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 驼峰式，首字母小写")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" SmallObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 帕斯卡式，首字母大写")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" strName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'strName'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 匈牙利式，前缀表示了变量是什么。这个前缀 str 表示了是一个字符串")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("变量命名和函数命名的侧重点不同。")]),s._v(" "),a("p",[s._v("变量命名的重点是表明这个变量“是什么”，倾向于用名词命名。而函数命名的重点是表明这个函数“做什么”，倾向于用动宾结构来命名（动宾结构就是 "),a("code",[s._v("doSomething")]),s._v("）。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 变量命名示例")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" appleNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数命名示例")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("formatDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("由于拼音同音字太多，千万不要使用拼音来命名。")]),s._v(" "),a("h4",{attrs:{id:"文档注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档注释"}},[s._v("#")]),s._v(" 文档注释")]),s._v(" "),a("p",[s._v("文档注释比较简单，例如单行注释使用 "),a("code",[s._v("//")]),s._v("，多行注释使用 "),a("code",[s._v("/**/")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * \n * @param {number} a \n * @param {number} b \n * @return {number}\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 单行注释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" active "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("如果要让团队从头开始制订一份代码规范，工作量会非常大，也不现实。所以强烈建议找一份比较好的开源代码规范，在此基础上结合团队的需求作个性化修改。")]),s._v(" "),a("p",[s._v("下面列举一些比较出名的 JavaScript 代码规范：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"}},[s._v("airbnb (101k star 英文版)"),a("OutboundLink")],1),s._v("，"),a("a",{attrs:{href:"https://github.com/lin-123/javascript",target:"_blank",rel:"noopener noreferrer"}},[s._v("airbnb-中文版"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/standard/standard/blob/master/docs/README-zhcn.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("standard (24.5k star) 中文版"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ecomfe/spec",target:"_blank",rel:"noopener noreferrer"}},[s._v("百度前端编码规范 3.9k star"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("CSS 代码规范也有不少，例如：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/fex-team/styleguide/blob/master/css.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("styleguide 2.3k star"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ecomfe/spec/blob/master/css-style-guide.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("spec 3.9k star"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"如何检查代码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何检查代码规范"}},[s._v("#")]),s._v(" 如何检查代码规范")]),s._v(" "),a("p",[s._v("规范制订下来了，那怎么确保它被严格执行呢？目前有两个方法：")]),s._v(" "),a("ol",[a("li",[s._v("使用工具校验代码格式。")]),s._v(" "),a("li",[s._v("利用 code review 审查变量命名、注释。")])]),s._v(" "),a("p",[s._v("建议使用这两个方法双管齐下，确保代码规范被严格执行。")]),s._v(" "),a("p",[s._v("下面让我们来看一下，如何使用工具来校验代码格式。")]),s._v(" "),a("h4",{attrs:{id:"eslint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint"}},[s._v("#")]),s._v(" ESLint")]),s._v(" "),a("blockquote",[a("p",[s._v("ESLint最初是由Nicholas C. Zakas 于2013年6月创建的开源项目。它的目标是提供一个插件化的javascript代码检测工具。")])]),s._v(" "),a("ol",[a("li",[s._v("下载依赖")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// eslint-config-airbnb-base 使用 airbnb 代码规范\nnpm i -D babel-eslint eslint eslint-config-airbnb-base eslint-plugin-import\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("配置 "),a("code",[s._v(".eslintrc")]),s._v(" 文件")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n    "parserOptions": {\n        "ecmaVersion": 2019\n    },\n    "env": {\n        "es6": true,\n    },\n    "parser": "babel-eslint",\n    "extends": "airbnb-base",\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("在 "),a("code",[s._v("package.json")]),s._v(" 的 "),a("code",[s._v("scripts")]),s._v(" 加上这行代码 "),a("code",[s._v('"lint": "eslint --ext .js test/ src/"')]),s._v("。然后执行 "),a("code",[s._v("npm run lint")]),s._v(" 即可开始验证代码。代码中的 "),a("code",[s._v("test/ src/")]),s._v(" 是要进行校验的代码目录，这里指明了要检查 "),a("code",[s._v("test")]),s._v("、"),a("code",[s._v("src")]),s._v(" 目录下的代码。")])]),s._v(" "),a("p",[s._v("不过这样检查代码效率太低，每次都得手动检查。并且报错了还得手动修改代码。")]),s._v(" "),a("p",[s._v("为了改善以上缺点，我们可以使用 VSCode。使用它并加上适当的配置可以在每次保存代码的时候，自动验证代码并进行格式化，省去了动手的麻烦（下一节讲如何使用 VSCode 自动格式化代码）。")]),s._v(" "),a("h4",{attrs:{id:"stylelint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stylelint"}},[s._v("#")]),s._v(" stylelint")]),s._v(" "),a("p",[s._v("stylelint 是一个开源的、用于检查 CSS 代码格式的开源工具。具体如何使用请看下一节。")]),s._v(" "),a("h3",{attrs:{id:"使用-vscode-自动格式化代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-vscode-自动格式化代码"}},[s._v("#")]),s._v(" 使用 VSCode 自动格式化代码")]),s._v(" "),a("h4",{attrs:{id:"格式化-javascript-代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化-javascript-代码"}},[s._v("#")]),s._v(" 格式化 JavaScript 代码")]),s._v(" "),a("p",[s._v("安装 VSCode，然后安装插件 ESLint。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/b4af668deae95fe6f00e8ce9a2b651bf.png",alt:""}})]),s._v(" "),a("p",[s._v("选择 "),a("code",[s._v("File")]),s._v(" -> "),a("code",[s._v("Preference")]),s._v("-> "),a("code",[s._v("Settings")]),s._v("（如果装了中文插件包应该是 文件 -> 选项 -> 设置），搜索 eslint，点击 "),a("code",[s._v("Edit in setting.json")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/9820d5a2ec912c0fa232908174911424.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("将以下选项添加到配置文件")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"editor.codeActionsOnSave"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"source.fixAll"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("配置完之后，VSCode 会根据你当前项目下的 "),a("code",[s._v(".eslintrc")]),s._v(" 文件的规则来验证和格式化代码。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/2124694cc6805a78697657ba790f69a0.gif",alt:""}})]),s._v(" "),a("h5",{attrs:{id:"typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[s._v("#")]),s._v(" TypeScript")]),s._v(" "),a("p",[s._v("下载插件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm install --save-dev typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在 "),a("code",[s._v(".eslintrc")]),s._v(" 配置文件，添加以下两个配置项：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    parser"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@typescript-eslint/parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@typescript-eslint'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("在根目录下的 "),a("code",[s._v("package.json")]),s._v(" 文件的 "),a("code",[s._v("scripts")]),s._v(" 选项里添加以下配置项：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint --ext .js,.ts,.tsx test/ src/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("test/")]),s._v(" "),a("code",[s._v("src/")]),s._v(" 是你要校验的目录。修改完后，现在 ts 文件也可以自动格式化了。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/e990512dbf4bbf446017ec810b878ec1.gif",alt:""}})]),s._v(" "),a("h5",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[s._v("#")]),s._v(" 扩展")]),s._v(" "),a("p",[s._v("如何格式化 HTML、Vue（或其他后缀） 文件中的 HTML 和 CSS？")]),s._v(" "),a("p",[s._v("这需要利用 VSCode 自带的格式化，快捷键是 "),a("code",[s._v("shift + alt + f")]),s._v("。假设当前 VSCode 打开的是一个 Vue 文件，按下 "),a("code",[s._v("shift + alt + f")]),s._v(" 会提示你选择一种格式化规范。如果没提示，那就是已经有默认的格式化规范了（一般是 vetur 插件），然后 Vue 文件的所有代码都会格式化，并且格式化规则还可以自己配置。")]),s._v(" "),a("p",[s._v("具体规则如下图所示，可以根据自己的喜好来选择格式化规则。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/f532633b2856c8e1cedaa6c38c176151.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("因为之前已经设置过 ESlint 的格式化规则了，所以 Vue 文件只需要格式化 HTML 和 CSS 中的代码，不需要格式化 JavaScript 代码，所以我们需要禁止 vetur 格式化 JavaScript 代码：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/64fac739a981493721ae2fbdda495be0.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("根据上图配置完成后，回到刚才的 Vue 文件。随意打乱代码的格式，再按下 "),a("code",[s._v("shift + alt + f")]),s._v(" ，会发现 HTML 和 CSS 中的代码已经格式化了，但是 JavaScript 的代码并没格式化。没关系，因为已经设置了 ESlint 格式化，所以只要执行保存操作，JavaScript 的代码也会自动格式化。")]),s._v(" "),a("p",[s._v("同理，其他类型的文件也可以这样设置格式化规范。")]),s._v(" "),a("h4",{attrs:{id:"格式化-css-代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化-css-代码"}},[s._v("#")]),s._v(" 格式化 CSS 代码")]),s._v(" "),a("p",[s._v("下载依赖")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm install --save-dev stylelint stylelint-config-standard\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在项目根目录下新建一个 "),a("code",[s._v(".stylelintrc.json")]),s._v(" 文件，并输入以下内容：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stylelint-config-standard"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("VSCode 添加 "),a("code",[s._v("stylelint")]),s._v(" 插件：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/afa020a625f5c5aee5fa304d35eb6682.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("然后就可以看到效果了。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/6156343f2a04454fa1d843f8bdecd07e.gif",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("如果你想修改插件的默认规则，可以看"),a("a",{attrs:{href:"https://github.com/stylelint/stylelint/blob/5a8465770b4ec17bb1b47f359d1a17132a204a71/docs/user-guide/rules/list.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v("，它提供了 170 项规则修改。例如我想要用 4 个空格作为缩进，可以这样配置：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stylelint-config-standard"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"indentation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"code-review-代码审查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-review-代码审查"}},[s._v("#")]),s._v(" Code Review 代码审查")]),s._v(" "),a("p",[s._v("代码审查是指让其他人来审查自己代码的一种行为。审查有多种方式：例如结对编程（一个人写，一个人看）或者统一某个时间点大家互相做审查（单人或多人）。")]),s._v(" "),a("p",[s._v("代码审查的目的是为了检查代码是否符合代码规范以及是否有错误，另外也能让评审人了解被审人所写的功能。经常互相审查，能让大家都能更清晰地了解整个项目的功能，这样就不会因为某个核心开发人员离职了而引起项目延期。")]),s._v(" "),a("p",[s._v("当然，代码审查也是有缺点的：一是代码审查非常耗时，二是有可能引发团队成员争吵。据我了解，目前国内很多开发团队都没有代码审查，包括很多大厂。")]),s._v(" "),a("p",[s._v("个人建议在找工作时，可以询问一下对方团队是否有测试规范、测试流程、代码审查等。如果同时拥有以上几点，说明是一个靠谱的团队，可以优先选择。")]),s._v(" "),a("h2",{attrs:{id:"git-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-规范"}},[s._v("#")]),s._v(" git 规范")]),s._v(" "),a("p",[s._v("git 规范一般包括两点：分支管理规范和 git commit 规范。")]),s._v(" "),a("h3",{attrs:{id:"分支管理规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支管理规范"}},[s._v("#")]),s._v(" 分支管理规范")]),s._v(" "),a("p",[s._v("一般项目分主分支（master）和其他分支。")]),s._v(" "),a("p",[s._v("当有团队成员要开发新功能或改 BUG 时，就从 master 分支开一个新的分支。例如项目要从客户端渲染改成服务端渲染，就开一个分支叫 SSR，开发完了再合并回 master 分支。")]),s._v(" "),a("p",[s._v("如果要改一个重大的 BUG，也可以从 master 分支开一个新分支，并用 BUG 号命名。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新建分支并切换到新分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换回主分支，合并新分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("注意，在将一个新分支合并回 master 分支时，如果新分支中有一些意义不明确的 commit，建议先对它们进行合并（使用 git rebase）。合并后，再将新分支合并回 master 分支。")]),s._v(" "),a("h3",{attrs:{id:"git-commit-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-规范"}},[s._v("#")]),s._v(" git commit 规范")]),s._v(" "),a("p",[s._v("git 在每次提交时，都需要填写 commit message。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this is a test'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("commit message 就是对你这次的代码提交进行一个简单的说明，好的提交说明可以让人一眼就明白这次代码提交做了什么。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/6ddb0c3a6a923d70d4d8a72229a2e9b6.png",alt:""}})]),s._v(" "),a("p",[s._v("既然明白了 commit message 的重要性，那我们就更要好好的学习一下 commit message 规范。下面让我们看一下 commit message 的格式：")]),s._v(" "),a("div",{staticClass:"language-md line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("("),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("): "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("subject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("BLANK")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("LINE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("BLANK")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("LINE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("footer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("我们可以发现，commit message 分为三个部分(使用空行分割):")]),s._v(" "),a("ol",[a("li",[s._v("标题行（subject）: 必填, 描述主要修改类型和内容。")]),s._v(" "),a("li",[s._v("主题内容（body）: 描述为什么修改, 做了什么样的修改, 以及开发的思路等等。")]),s._v(" "),a("li",[s._v("页脚注释（footer）: 可以写注释，放 BUG 号的链接。")])]),s._v(" "),a("h4",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[s._v("#")]),s._v(" type")]),s._v(" "),a("p",[s._v("commit 的类型：")]),s._v(" "),a("ul",[a("li",[s._v("feat: 新功能、新特性")]),s._v(" "),a("li",[s._v("fix: 修改 bug")]),s._v(" "),a("li",[s._v("perf: 更改代码，以提高性能")]),s._v(" "),a("li",[s._v("refactor: 代码重构（重构，在不影响代码内部行为、功能下的代码修改）")]),s._v(" "),a("li",[s._v("docs: 文档修改")]),s._v(" "),a("li",[s._v("style: 代码格式修改, 注意不是 css 修改（例如分号修改）")]),s._v(" "),a("li",[s._v("test: 测试用例新增、修改")]),s._v(" "),a("li",[s._v("build: 影响项目构建或依赖项修改")]),s._v(" "),a("li",[s._v("revert: 恢复上一次提交")]),s._v(" "),a("li",[s._v("ci: 持续集成相关文件修改")]),s._v(" "),a("li",[s._v("chore: 其他修改（不在上述类型中的修改）")]),s._v(" "),a("li",[s._v("release: 发布新版本")]),s._v(" "),a("li",[s._v("workflow: 工作流相关文件修改")])]),s._v(" "),a("h4",{attrs:{id:"scope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[s._v("#")]),s._v(" scope")]),s._v(" "),a("p",[s._v("commit message 影响的功能或文件范围, 比如: route, component, utils, build...")]),s._v(" "),a("h4",{attrs:{id:"subject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subject"}},[s._v("#")]),s._v(" subject")]),s._v(" "),a("p",[s._v("commit message 的概述")]),s._v(" "),a("h4",{attrs:{id:"body"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#body"}},[s._v("#")]),s._v(" body")]),s._v(" "),a("p",[s._v("具体修改内容, 可以分为多行.")]),s._v(" "),a("h4",{attrs:{id:"footer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#footer"}},[s._v("#")]),s._v(" footer")]),s._v(" "),a("p",[s._v("一些备注, 通常是 BREAKING CHANGE 或修复的 bug 的链接.")]),s._v(" "),a("h4",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("h5",{attrs:{id:"fix（修复bug）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fix（修复bug）"}},[s._v("#")]),s._v(" fix（修复BUG）")]),s._v(" "),a("p",[s._v("每次 git commit 最好加上范围描述。")]),s._v(" "),a("p",[s._v("例如这次 BUG 修复影响到全局，可以加个 global。如果影响的是某个目录或某个功能，可以加上该目录的路径，或者对应的功能名称。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 示例1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("修复checkbox不能复选的问题\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 示例2 下面圆括号里的 common 为通用管理的名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 修复字体过小的"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BUG")]),s._v("，将通用管理下所有页面的默认字体大小修改为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v("px\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 示例3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h5",{attrs:{id:"feat（添加新功能或新页面）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#feat（添加新功能或新页面）"}},[s._v("#")]),s._v(" feat（添加新功能或新页面）")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("feat"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 添加网站主页静态页面\n\n这是一个示例，假设对任务静态页面进行了一些描述。\n \n这里是备注，可以是放 "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BUG")]),s._v(" 链接或者一些重要性的东西。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h5",{attrs:{id:"chore（其他修改）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chore（其他修改）"}},[s._v("#")]),s._v(" chore（其他修改）")]),s._v(" "),a("p",[s._v("chore 的中文翻译为日常事务、例行工作。顾名思义，即不在其他 commit 类型中的修改，都可以用 chore 表示。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("chore"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 将表格中的查看详情改为详情\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其他类型的 commit 和上面三个示例差不多，在此不再赘述。")]),s._v(" "),a("h4",{attrs:{id:"验证-git-commit-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证-git-commit-规范"}},[s._v("#")]),s._v(" 验证 git commit 规范")]),s._v(" "),a("p",[s._v("利用 "),a("a",{attrs:{href:"https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90",target:"_blank",rel:"noopener noreferrer"}},[s._v("git hook"),a("OutboundLink")],1),s._v(" 能在特定的重要动作发生时触发自定义脚本。")]),s._v(" "),a("p",[s._v("验证 git commit 规范也不例外，我们需要通过 git 的 "),a("code",[s._v("pre-commit")]),s._v(" 钩子函数来进行。当然，你还需要下载一个辅助插件 husky 来帮助你进行验证。")]),s._v(" "),a("blockquote",[a("p",[s._v("pre-commit 钩子在键入提交信息前运行，它用于检查即将提交的快照。")])]),s._v(" "),a("p",[s._v("husky 是一个开源的工具，使用它我们可以在 "),a("code",[s._v("package.json")]),s._v(" 里配置 "),a("code",[s._v("git hook")]),s._v(" 脚本。下面让我们看一下如何使用：")]),s._v(" "),a("p",[s._v("下载")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm i -D husky\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在 "),a("code",[s._v("package.json")]),s._v(" 加上下面的代码：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"pre-commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run lint"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commit-msg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node script/verify-commit.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"pre-push"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm test"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("然后在你项目根目录下新建一个文件夹 "),a("code",[s._v("script")]),s._v("，并在下面新建一个文件 "),a("code",[s._v("verify-commit.js")]),s._v("，输入以下代码：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" msgPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HUSKY_GIT_PARAMS")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("msgPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'utf-8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 提前定义好 commit message 的格式，如果不符合格式就退出程序。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" commitRE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/^(feat|fix|docs|style|refactor|perf|test|workflow|build|ci|chore|release|workflow)(\\(.+\\))?: .{1,50}/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("commitRE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\n        不合法的 commit 消息格式。\n        请查看 git commit 提交规范：https://github.com/woai3c/Front-end-articles/blob/master/git%20commit%20style.md\n    ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("现在来解释下各个钩子的含义：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v('"pre-commit": "npm run lint"')]),s._v("，在 "),a("code",[s._v("git commit")]),s._v(" 前执行 "),a("code",[s._v("npm run lint")]),s._v(" 检查代码格式。")]),s._v(" "),a("li",[a("code",[s._v('"commit-msg": "node script/verify-commit.js"')]),s._v("，在 "),a("code",[s._v("git commit")]),s._v(" 时执行脚本 "),a("code",[s._v("verify-commit.js")]),s._v(" 验证 commit 消息。如果不符合脚本中定义的格式，将会报错。")]),s._v(" "),a("li",[a("code",[s._v('"pre-push": "npm test"')]),s._v("，在你执行 "),a("code",[s._v("git push")]),s._v(" 将代码推送到远程仓库前，执行 "),a("code",[s._v("npm test")]),s._v(" 进行测试。如果测试失败，将不会执行这次推送。")])]),s._v(" "),a("p",[s._v("通过工具，我们可以很好的管理团队成员的 git commit 格式，无需使用人力来检查，大大提高了开发效率。")]),s._v(" "),a("p",[s._v("另外，我提供了一个简单的工程化 "),a("a",{attrs:{href:"https://github.com/woai3c/front-end-engineering-demo",target:"_blank",rel:"noopener noreferrer"}},[s._v("DEMO"),a("OutboundLink")],1),s._v("。它包含了自动格式化代码和 git 验证，如果看完文章还是不知道如何配置，可以参考一下。")]),s._v(" "),a("h2",{attrs:{id:"项目规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目规范"}},[s._v("#")]),s._v(" 项目规范")]),s._v(" "),a("p",[s._v("项目规范主要是指项目文件的组织方式和命名方式。统一项目规范是为了方便管理与修改，不会出现同样性质的文件出现在不同的地方。例如同样是图片，一个出现在 "),a("code",[s._v("assets")]),s._v(" 目录，一个出现在 "),a("code",[s._v("img")]),s._v(" 目录。")]),s._v(" "),a("p",[s._v("创建目录，需要按照用途来划分。例如较常见的目录有：文档 "),a("code",[s._v("doc")]),s._v("、资源 "),a("code",[s._v("src")]),s._v("、测试 "),a("code",[s._v("test")]),s._v("...")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("├─doc\n├─src\n├─test\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("src")]),s._v(" 资源目录又可以细分：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("├─api\n├─asset\n├─component\n├─style\n├─router\n├─store\n├─util\n└─view\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("现在文件命名有很多种方式（是否简写 "),a("code",[s._v("img")]),s._v(" "),a("code",[s._v("image")]),s._v("、是否复数 "),a("code",[s._v("img")]),s._v(" "),a("code",[s._v("imgs")]),s._v("、文件名过长是用驼峰还是用-连接 "),a("code",[s._v("oneTwo")]),s._v(" "),a("code",[s._v("one-two")]),s._v("）。其实用哪种方式不重要，最重要的是命名方式一定要统一。")]),s._v(" "),a("p",[s._v("例如团队成员有人命名目录喜欢用复数形式（"),a("code",[s._v("apis")]),s._v("），有人喜欢用单数（"),a("code",[s._v("api")]),s._v("），这样是不允许的，一定要统一。")]),s._v(" "),a("h2",{attrs:{id:"ui-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui-规范"}},[s._v("#")]),s._v(" UI 规范")]),s._v(" "),a("p",[s._v("注意，这里的 UI 规范是指项目里常用 UI 组件的表现方式以及组件的命名方式，而不是指 UI 组件如何设计。")]),s._v(" "),a("h3",{attrs:{id:"表现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表现方式"}},[s._v("#")]),s._v(" 表现方式")]),s._v(" "),a("p",[s._v("现在开源的 UI 组件库有很多，不同的组件库的组件表现方式也不一样。例如有些按钮组件点击时颜色变深，有些组件则是变浅。所以建议在 PC 端和移动端都使用统一的 UI 组件库（PC 端、移动端各一个），或者同一个项目里只使用一个 UI 组件库。")]),s._v(" "),a("p",[s._v("另外，项目里常用的组件表现方式也需要通过文档确定下来。例如收缩展开的动画效果，具体到动画持续时间、动画是缓进快出还是快进缓出等等。")]),s._v(" "),a("p",[s._v("如果不把这些表现方式的规范确定下来，就有可能出现以下这种情况：")]),s._v(" "),a("ol",[a("li",[s._v("同样的组件，在不同的页面有不同的表现方式（例如动画效果）。因为没有规范，开发根据个人喜好添加表现效果。")]),s._v(" "),a("li",[s._v("同样的二次确认弹窗，提示语不一样，按钮类型也不一样。")])]),s._v(" "),a("h3",{attrs:{id:"统一命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统一命名"}},[s._v("#")]),s._v(" 统一命名")]),s._v(" "),a("p",[s._v("统一命名，也是为了减少沟通成本。")]),s._v(" "),a("p",[s._v("举个例子，现在的日期组件可以选单个日期、也可以选择范围日期，有的还可以选择时间。这样一来，一个日期组件就有四种情况：")]),s._v(" "),a("ol",[a("li",[s._v("单个日期带时间")]),s._v(" "),a("li",[s._v("单个日期不带时间")]),s._v(" "),a("li",[s._v("日期范围带时间")]),s._v(" "),a("li",[s._v("日期范围不带时间")])]),s._v(" "),a("p",[s._v("如果这种情况不区分好，开发在看产品文档的时候就会疑惑，从而增加了开发与产品的沟通成本。")]),s._v(" "),a("p",[s._v("综上所述，我们可以发现制定 UI 规范的好处有两点：")]),s._v(" "),a("ol",[a("li",[s._v("统一页面 UI 标准，节省 UI 设计时间。")]),s._v(" "),a("li",[s._v("减少沟通成本，提高前端开发效率。")])]),s._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("其实统一规范的最根本目的就是为了保证团队成员的一致性，从而减少沟通成本，提高开发效率。我以前就经历过因为规范不标准，造成产品与开发理解有偏差、开发各写各的代码，导致各种 BUG 不断，最后项目延期的事。")]),s._v(" "),a("p",[s._v("所以说为了提高开发效率，减少加班，请一定要统一规范。")]),s._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[s._v("husky"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/stylelint/stylelint/blob/5a8465770b4ec17bb1b47f359d1a17132a204a71/docs/user-guide/rules/list.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("stylelint"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://eslint.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("eslint"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);